import React, { useEffect, useState } from 'react';
import { Box, Grid, TextField, Card, CardActionArea, CardContent, CardMedia, Typography } from '@mui/material';
import { Person, Schedule, School, CreditCard } from '@mui/icons-material';
import TeacherSidebar from './TeacherSidebar';

const mockFetchCourses = async () => {
  // Mock data fetch
  return [
    {
      id: 1,
      name: 'Course 1',
      image: 'path_to_course_image_1.png',
      students: 10,
      modules: 'Modules',
      duration: '3 Months',
      credits: 3,
    },
    {
      id: 2,
      name: 'Course 2',
      image: 'path_to_course_image_2.png',
      students: 15,
      modules: 'Modules',
      duration: '4 Months',
      credits: 4,
    },
    // Add more courses as needed
  ];
};

const TeacherExplorer = () => {
  const [courses, setCourses] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filteredCourses, setFilteredCourses] = useState([]);

  useEffect(() => {
    const fetchCourses = async () => {
      const data = await mockFetchCourses();
      setCourses(data);
      setFilteredCourses(data);
    };
    fetchCourses();
  }, []);

  const handleSearch = (e) => {
    const query = e.target.value.toLowerCase();
    setSearchQuery(query);
    const filtered = courses.filter(course => course.name.toLowerCase().includes(query));
    setFilteredCourses(filtered);
  };

  return (
    <Box sx={{ display: 'flex' }}>
      <TeacherSidebar />
      <Box
        component="main"
        sx={{
          flexGrow: 1,
          p: 3,
          display: 'flex',
          flexDirection: 'column',
        }}
      >
        <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
          <Typography variant="h4" gutterBottom>
            Teacher Explorer
          </Typography>
          <TextField
            label="Search Courses"
            variant="outlined"
            value={searchQuery}
            onChange={handleSearch}
          />
        </Box>
        {filteredCourses.length > 0 ? (
          <Grid container spacing={3}>
            {filteredCourses.map((course) => (
              <Grid item xs={12} sm={6} md={4} key={course.id}>
                <Card sx={{ height: '100%' }}>
                  <CardActionArea sx={{ height: '100%' }}>
                    <CardMedia
                      component="img"
                      height="140"
                      image={course.image}
                      alt={course.name}
                    />
                    <CardContent>
                      <Typography variant="h5" component="div">
                        {course.name}
                      </Typography>
                      <Box sx={{ mt: 1, display: 'flex', flexDirection: 'column', gap: 1 }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <Person sx={{ mr: 1 }} />
                          <Typography variant="body2">{course.students} students</Typography>
                        </Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <School sx={{ mr: 1 }} />
                          <Typography variant="body2">{course.modules}</Typography>
                        </Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <Schedule sx={{ mr: 1 }} />
                          <Typography variant="body2">{course.duration}</Typography>
                        </Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <CreditCard sx={{ mr: 1 }} />
                          <Typography variant="body2">{course.credits} Credits</Typography>
                        </Box>
                      </Box>
                    </CardContent>
                  </CardActionArea>
                </Card>
              </Grid>
            ))}
          </Grid>
        ) : (
          <Typography variant="h6" sx={{ mt: 3 }}>
            No courses found.
          </Typography>
        )}
      </Box>
    </Box>
  );
};

export default TeacherExplorer;
